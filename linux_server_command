1. Connect to server:

$ ssh remote_username@remote_host

2. File exchange between local and server:

a. Copy the file "foobar.txt" from a remote host to the local host

$ scp your_username@remotehost.edu:foobar.txt /some/local/directory

b. Copy the file "foobar.txt" from the local host to a remote host
$ scp foobar.txt your_username@remotehost.edu:/some/remote/directory

c. Copy the directory "foo" from the local host to a remote host's directory "bar"
$ scp -r foo your_username@remotehost.edu:/some/remote/directory/bar

d. Copy multiple files from the remote host to your current directory on the local host
$ scp your_username@remotehost.edu:/some/remote/directory/\{a,b,c\} .
$ scp your_username@remotehost.edu:~/\{foo.txt,bar.txt\} .


3. Keep connection alive between server and local machine (Linux/Mac), two approach:

a. on local

1) sudo nano /etc/ssh/ssh_config
2) add: 
Host *
ServerAliveInterval 120

This is how often, in seconds, it should send a keepalive message to the server. If that doesn't work then train a monkey to press enter every two minutes while you work.

b. on server

1) sudo nano /etc/ssh/ssh_config
2) add: 
Host *
ClientAliveInterval 120

https://askubuntu.com/questions/127369/how-to-prevent-write-failed-broken-pipe-on-ssh-connection




# uninstall software:

$ sudo apt-get remove <application_name>

# make directory

$ mkdir <dirname>
